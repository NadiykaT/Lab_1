<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4gHYSUNDX1BST0ZJTEUAAQEAAAHIAAAAAAQwAABtbnRyUkdCIFhZ
        WiAH4AABAAEAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        ACRyWFlaAAABFAAAABRnWFlaAAABKAAAABRiWFlaAAABPAAAABR3dHB0AAABUAAAABRyVFJDAAABZAAA
        AChnVFJDAAABZAAAAChiVFJDAAABZAAAAChjcHJ0AAABjAAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AAgAAAAcAHMAUgBHAEJYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAA
        AAAAACSgAAAPhAAAts9YWVogAAAAAAAA9tYAAQAAAADTLXBhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABtbHVjAAAAAAAAAAEAAAAMZW5VUwAAACAAAAAcAEcAbwBvAGcAbABlACAASQBu
        AGMALgAgADIAMAAxADb/2wBDAAQDAwQDAwQEAwQFBAQFBgoHBgYGBg0JCggKDw0QEA8NDw4RExgUERIX
        Eg4PFRwVFxkZGxsbEBQdHx0aHxgaGxr/2wBDAQQFBQYFBgwHBwwaEQ8RGhoaGhoaGhoaGhoaGhoaGhoa
        GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhr/wgARCAAvAscDASIAAhEBAxEB/8QAGwABAQAD
        AQEBAAAAAAAAAAAAAAYEBQcDAQL/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIQAxAAAAG7z1qR
        SizCRe1Ycmp/WwIpaiKWoilqIpaiKWoivC8kTwWvgSLOpyKWoimz+GtWoilqIr8bf6aX19q8ilqIpaiK
        WoilqIpaiKWoilqIpaiKWoilqIpajkdP62BFLURS1EUtRFLURTVdGI5az5qlqIpv8ollhKni0vTyKWoi
        lqIpaiKWo52zwtYq1OE9X5r085L0/l3XDU2EfYA+EbttLZGr/Pn+Ty8vXENbg7LNNhPbfVmVsMbYmT82
        w5tbY20OR3ODnGBvdJSGv9t8ILc4WWaLofP+gAAAAAAAAAAAEfYR9gAAAAQFXKXho5+7jyh2Wg35zGzn
        PY30vT45o+gc/wCgAAAAEUBa892xssjSj9UE6POw5XUFZiTwocuTFYkxWJMViTFZL+YrEmKxJisSYrNL
        rRWJMViTFZptYPelkxWJMViTFYkxWJMViTFYkxWJMViTFYkxWJMViTHnYcrqCsSYrEmKxJisSY1N7MCs
        SYo8mTFZjTgrEmNJ0eTFYkxWJMViTFYkxjMIf//EACkQAAEEAgIBAwQCAwAAAAAAAAUAAwQVAhYBBjYQ
        MDUSExRAByARMzT/2gAIAQEAAQUCPQ2Z5jUxK1MStTErUxK1MSuw9bGxAupiVqYlamJWpiVqYlamJWpi
        VqYlamJWpiVqYlamJWfWAzfOpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVl1QRjxh1YM5hq
        YlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJWpiVqYlamJR/rY2
        KM1MStTErUxK1MStTErUxK1MStTErUxK1MStTErUxK1MStTErUxK1MStTErUxK1MStTErUxK1MStTErU
        xK1MStTErUxK1MStTEoDDZgGCXkCmEIw9tpzF5tztAhmTxzxzx2rx73BzvM8incPuNjGXGZHrOLsQZRR
        zNt3+k0s1Bk4uZXMJ38Yv+v2f4b2SbP5vZccfoxRAsyNz9CE9oZEjP8AEmPnnw3hBP4T5MqN+D2P2Rvk
        BLyBfyLEZwiwW/vB+6BB0IMAYdjBe1ePeuMmWz2Adm+4nnp2LjT0/Jw0QzgRuW50SbGkTCgjLsWTwwW5
        zmx0zn6wvYJUwaywzMk5RIOENTCMeAhp+Lw5KmtRIhF1niQVy4ycOzJovKFhO4cdOQmXIxeJLd7F/wBe
        Hz0/n7fbv1+z/Dey/wCYSSMWHlwaHZc9p/1utSMpSNO4EB4fLjIWVhuEII6aQhES3kfsjfICXkC/kj40
        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
        ZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDB
        ZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDB
        ZGe1UHEu7KeZTxGvCN5s/tE9hjBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQw
        WRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQw
        WRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQwWRntVDBZGe1UMFkZ7VQ20t9hUZfiPAUojs8E+wf/
        xAApEAEAAQMDAgYDAQEBAAAAAAABEQAhMUFRYRCRMHGBobHwIEBQwdHx/9oACAEBAAE/IWMAkCzF0P5f
        v379+SIZENnZi+L+/fv379+/fv379HNzX9g8Z+/fv379+/fv379+CtCWlMh4wDf9h+/fv379+/fv379+
        /fv379+/fv34GABbJCzHC/vfv379+/fv379+/fv379+/fv379+/fv379+Y4CQLs3S19/h02KOxT5GWoe
        0xsjimABChB2YfKjSgJE1r3b5PFcCYxsgfUUOhEeMfGVEDaVgMLl0Z1n8BeFaHfYoRMkjU4ex+JGYX0O
        6t2p7oIZ21NPiZG49BCf4SDfPAvi1oUsQgll6TzAlQkXwPnq1YmAyaDmkfZ9AJNBgYRoFAMSoOE1mmTC
        weJlzBnwvv8AKvv8OnLdngtO1GoBloEnDT48GKTI0aWAHLZ6CCvdvk/A/wDMVg2mb2ajrQbc25hkniic
        3Jp7kd6UC2/MeUJ70zWzSVYl5VGZFEYZJCO1TsnVtMBJZi7OtRT58Ug0bpXoMqTybV24Zp75S91dX51m
        SIInbO1FCeJTdYt2KDSLAQDYcVqG+1fOip+UZRcfbraoDoxOphfVUpNCwRI1MFu7rRLHSJEqM+oF0GXe
        KnJejuQ+hehl3AGnzItGiZQMtyBX1m7odWxfOoH+v4cH0KiQhqU7WoAF3p0LJyCnpxjohoC5lH2Nd6gu
        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
</value>
  </data>
</root>